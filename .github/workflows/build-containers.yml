name: Build Containers

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'infrastructure/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'infrastructure/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      infrastructure: ${{ steps.changes.outputs.infrastructure }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            infrastructure:
              - 'infrastructure/**'

  build-backend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check if backend Docker files exist
        id: check-backend-docker
        run: |
          if [ -f "backend/docker/Dockerfile.dev" ] && [ -f "backend/docker/Dockerfile.prod" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push backend dev image
        if: steps.check-backend-docker.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/docker/Dockerfile.dev
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:dev-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push backend prod image
        if: steps.check-backend-docker.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/docker/Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:prod-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Skip backend (Docker files not ready)
        if: steps.check-backend-docker.outputs.exists == 'false'
        run: |
          echo "Backend Docker files not yet implemented - skipping build"

  build-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check if frontend Docker files exist
        id: check-frontend-docker
        run: |
          if [ -f "frontend/docker/Dockerfile.dev" ] && [ -f "frontend/docker/Dockerfile.prod" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push frontend dev image
        if: steps.check-frontend-docker.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile.dev
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:dev-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend prod image
        if: steps.check-frontend-docker.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:prod-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Skip frontend (Docker files not ready)
        if: steps.check-frontend-docker.outputs.exists == 'false'
        run: |
          echo "Frontend Docker files not yet implemented - skipping build"

  build-infrastructure:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.infrastructure == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Compose files
        run: |
          cd infrastructure
          docker-compose -f docker/docker-compose.dev.yml config
          docker-compose -f docker/docker-compose.test.yml config
          docker-compose -f docker/docker-compose.prod.yml config

      - name: Test infrastructure setup
        run: |
          echo "Infrastructure validation completed successfully"