name: CI Test Environment

# Global permissions (can be overridden by job-level permissions)
permissions:
  contents: read

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-deploy-test:
    runs-on: ubuntu-latest
    environment: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image name
        id: image-name
        run: |
          # Convert repository name to lowercase for Docker registry compatibility
          echo "name=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/docker/Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.image-name.outputs.name }}/backend:test
            ${{ env.REGISTRY }}/${{ steps.image-name.outputs.name }}/backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Check if frontend exists
        id: check-frontend
        run: |
          if [ -f "./frontend/docker/Dockerfile.prod" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Frontend Dockerfile not found - skipping frontend build"
          fi

      - name: Build and push frontend image
        if: steps.check-frontend.outputs.exists == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.image-name.outputs.name }}/frontend:test
            ${{ env.REGISTRY }}/${{ steps.image-name.outputs.name }}/frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to test environment
        run: |
          echo "Deploying to test environment..."
          # Add deployment commands here (e.g., Docker Compose, Kubernetes, etc.)
          # docker-compose -f infrastructure/docker/docker-compose.test.yml up -d

      - name: Run health checks
        run: |
          echo "Running health checks..."
          # Add health check commands here
          # curl -f http://test-api.bettingplatform.com/health || exit 1

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          # Add integration test commands here
          # pytest backend/tests/integration/ --env=test