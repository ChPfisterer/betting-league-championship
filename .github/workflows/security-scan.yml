name: Security Scan

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  secret-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk vulnerability scan (Backend)
        if: matrix.component == 'backend' && env.SNYK_TOKEN != ''
        continue-on-error: true
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=backend/requirements/base.txt --severity-threshold=high

      - name: Run Snyk vulnerability scan (Frontend)
        if: matrix.component == 'frontend' && env.SNYK_TOKEN != ''
        continue-on-error: true
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=frontend/package.json --severity-threshold=high

  code-security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        continue-on-error: true
        with:
          languages: python, javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        continue-on-error: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  container-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Docker files exist
        id: check-docker
        run: |
          BACKEND_EXISTS=false
          FRONTEND_EXISTS=false
          
          if [ -f "backend/docker/Dockerfile.prod" ]; then
            BACKEND_EXISTS=true
          fi
          
          if [ -f "frontend/docker/Dockerfile.prod" ]; then
            FRONTEND_EXISTS=true
          fi
          
          echo "backend_exists=$BACKEND_EXISTS" >> $GITHUB_OUTPUT
          echo "frontend_exists=$FRONTEND_EXISTS" >> $GITHUB_OUTPUT

      - name: Build backend image for scanning
        if: steps.check-docker.outputs.backend_exists == 'true'
        run: |
          cd backend
          docker build -f docker/Dockerfile.prod -t backend-scan .

      - name: Build frontend image for scanning
        if: steps.check-docker.outputs.frontend_exists == 'true'
        run: |
          cd frontend
          docker build -f docker/Dockerfile.prod -t frontend-scan .

      - name: Run Trivy vulnerability scanner (Backend)
        if: steps.check-docker.outputs.backend_exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backend-scan'
          format: 'sarif'
          output: 'backend-trivy-results.sarif'

      - name: Run Trivy vulnerability scanner (Frontend)
        if: steps.check-docker.outputs.frontend_exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'frontend-scan'
          format: 'sarif'
          output: 'frontend-trivy-results.sarif'

      - name: Upload Trivy scan results (Backend)
        uses: github/codeql-action/upload-sarif@v3
        if: always() && steps.check-docker.outputs.backend_exists == 'true'
        continue-on-error: true
        with:
          sarif_file: 'backend-trivy-results.sarif'
          category: 'backend-container'

      - name: Upload Trivy scan results (Frontend)
        uses: github/codeql-action/upload-sarif@v3
        if: always() && steps.check-docker.outputs.frontend_exists == 'true'
        continue-on-error: true
        with:
          sarif_file: 'frontend-trivy-results.sarif'
          category: 'frontend-container'

      - name: Skip container scanning (Docker files not ready)
        if: steps.check-docker.outputs.backend_exists == 'false' && steps.check-docker.outputs.frontend_exists == 'false'
        run: |
          echo "Docker files not yet implemented - skipping container scanning"

  infrastructure-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          # dockerfile: Scan Dockerfile security
          # yaml: Scan Docker Compose files (YAML format) and other YAML configs
          # github_actions: Scan GitHub Actions workflows
          framework: dockerfile,yaml,github_actions
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        continue-on-error: true
        with:
          sarif_file: 'checkov-results.sarif'